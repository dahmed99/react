import static org.junit.Assert.*;
import static org.mockito.Mockito.*;

import com.amazonaws.services.secretsmanager.*;
import com.amazonaws.services.secretsmanager.model.*;
import com.amazonaws.client.builder.AwsClientBuilder;
import com.amazonaws.client.builder.AwsClientBuilder.EndpointConfiguration;

import org.junit.*;

public class AWSSecretsManagerUtilsTest {

    @Test
    public void testGetSecret() {
        // Create a mock AWSSecretsManager object
        AWSSecretsManager secretsManager = mock(AWSSecretsManager.class);

        // Create a mock AWSSecretsManagerClientBuilder object
        AWSSecretsManagerClientBuilder clientBuilder = mock(AWSSecretsManagerClientBuilder.class);

        // Mock the behavior of AWSSecretsManagerClientBuilder
        when(clientBuilder.standard()).thenReturn(clientBuilder);
        when(clientBuilder.withRegion(anyString())).thenReturn(clientBuilder);
        when(clientBuilder.build()).thenReturn(secretsManager);

        // Pass the mocked AWSSecretsManagerClientBuilder object to the method
        String secretName = "mocked-secret-name";
        String region = "mocked-region";
        String secretValue = AWSSecretsManagerUtils.getSecret(secretName, region, clientBuilder);

        // Verify that the method returns the expected value
        assertEquals("mocked-secret-value", secretValue);
    }
}
