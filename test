import static org.mockito.Mockito.*;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.amazonaws.services.secretsmanager.AWSSecretsManager;
import com.amazonaws.services.secretsmanager.AWSSecretsManagerClientBuilder;
import com.amazonaws.services.secretsmanager.model.GetSecretValueRequest;
import com.amazonaws.services.secretsmanager.model.GetSecretValueResult;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Value;

public class UtilsServiceTest {

    private UtilsService utilsService;

    private ObjectMapper objectMapper;

    @BeforeEach
    void setUp() {
        objectMapper = mock(ObjectMapper.class);
        utilsService = new UtilsService(objectMapper);
    }

    @Test
    void testGetAwsSecret() {
        // Mocking AWS Secrets Manager client
        AWSSecretsManager secretsManager = mock(AWSSecretsManager.class);
        when(secretsManager.getSecretValue(any(GetSecretValueRequest.class)))
            .thenReturn(new GetSecretValueResult().withSecretString("TestSecretValue"));

        AWSSecretsManagerClientBuilder clientBuilder = mock(AWSSecretsManagerClientBuilder.class);
        when(clientBuilder.withRegion(any())).thenReturn(clientBuilder);
        when(clientBuilder.build()).thenReturn(secretsManager);

        // Mocking region value
        utilsService.region = "us-east-1";

        // Test
        String secretName = "testSecret";
        String secretValue = utilsService.getAwsSecret(secretName);

        // Verify
        verify(secretsManager).getSecretValue(any(GetSecretValueRequest.class));
        assertEquals("TestSecretValue", secretValue);
    }
}
